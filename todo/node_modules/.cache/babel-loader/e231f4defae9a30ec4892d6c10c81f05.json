{"ast":null,"code":"var _jsxFileName = \"/home/rami/401/lab31/todo/todo/src/components/todo/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios';\nimport useAjax from '../hooks/useAjax';\nimport './todo.scss';\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\nexport default function ToDo() {\n  const [request, response] = useAjax();\n  const [list, setList] = useState([]); // useEffect(() => {\n  //   request({ todoAPI });\n  // }, [request]);\n\n  useEffect(() => {\n    setList(response);\n  }, [response]);\n\n  const getItems = async () => {\n    let request = await axios({\n      method: 'get',\n      url: todoAPI\n    });\n    let data = request.data.results;\n    setList(data);\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const postItems = async input => {\n    let request = await axios({\n      method: 'post',\n      url: todoAPI,\n      data: input\n    });\n    getItems();\n    return request;\n  };\n\n  const putItems = async id => {\n    let itemToPut = list.filter(i => i._id === id)[0];\n\n    if (itemToPut._id) {\n      let request = await axios({\n        method: 'put',\n        url: `${todoAPI}/${id}`,\n        data: {\n          complete: !itemToPut.complete\n        }\n      });\n      getItems();\n      return request;\n    }\n  };\n\n  const deleteItems = async id => {\n    let request = await axios({\n      method: 'delete',\n      mode: 'cors',\n      url: `${todoAPI}/${id}`\n    });\n    getItems();\n    return request;\n  }; //  const addItem = (item) => {\n  //     item._id = Math.random();\n  //     item.complete = false;\n  //     setList([...list, item]);\n  //   };\n  //   const toggleComplete = id =>{\n  //     let item = list.filter(i => i._id === id)[0] || {};\n  //     if (item._id) {\n  //       item.complete = !item.complete;\n  //       let lists = list.map(listItem => listItem._id === item._id ? item : listItem);\n  //       setList({lists});\n  //     }\n  //   };\n  // function componentDidMount (){\n  //   let list = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //   ];\n  //   setLists({list});\n  // }\n\n\n  useEffect(() => {\n    let list = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(list);\n  }, []); // render() {\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    addItem: postItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: putItems,\n    handleDelete: deleteItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }))));\n} // export default ToDo;","map":{"version":3,"sources":["/home/rami/401/lab31/todo/todo/src/components/todo/todo.js"],"names":["React","useState","useEffect","TodoForm","TodoList","axios","useAjax","todoAPI","ToDo","request","response","list","setList","getItems","method","url","data","results","postItems","input","putItems","id","itemToPut","filter","i","_id","complete","deleteItems","mode","text","difficulty","assignee","item","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios'\nimport useAjax from '../hooks/useAjax'\nimport './todo.scss';\n\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\nexport default function ToDo (){\n\n\n  const [request, response] = useAjax();\n  const [list, setList] = useState([])\n\n  // useEffect(() => {\n  //   request({ todoAPI });\n  // }, [request]);\n\n  useEffect(() => {\n  setList(response);\n  }, [response]);\n\n\n  const getItems = async () => {\n    \n      let request = await axios({\n        method: 'get',\n        url: todoAPI\n      })\n\n      let data = request.data.results;\n      setList(data);\n   \n  }\n\n  useEffect(() =>{\n    getItems()\n  }, []);\n\n  const postItems = async (input) => {\n    let request = await axios({\n      method: 'post',\n      url: todoAPI,\n      data: input\n    })\n    getItems();\n    return request;\n  };\n\n  const putItems = async (id) => {\n\n    let itemToPut = list.filter(i => i._id === id)[0];\n    \n    if (itemToPut._id) {\n      let request = await axios({\n        method: 'put',\n        url: `${todoAPI}/${id}`,\n        \n        data: {complete: !itemToPut.complete},\n      })\n      getItems();\n      return request;\n    }\n  }\n\n  const deleteItems = async (id) => {\n\n    let request = await axios({\n      method: 'delete',\n      mode: 'cors',\n      url: `${todoAPI}/${id}`,\n    })\n    getItems();\n    return request;\n  }\n\n  \n\n//  const addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     setList([...list, item]);\n//   };\n\n//   const toggleComplete = id =>{\n\n//     let item = list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let lists = list.map(listItem => listItem._id === item._id ? item : listItem);\n//       setList({lists});\n//     }\n\n//   };\n\n  // function componentDidMount (){\n  //   let list = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //   ];\n\n  //   setLists({list});\n  \n  // }\n\n  useEffect(() => {\n    let list = [\n          { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n          { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n          { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n          { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n          { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n        ];\n    \n        setList(list);\n  }, [])\n  // render() {\n    return (\n      <>\n        <header>\n          <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n          </h2>\n        </header>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm addItem={postItems} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={putItems}\n              handleDelete={deleteItems}\n            />\n          </div>\n        </section>\n      </>\n    );\n  }\n\n\n// export default ToDo;\n"]},"metadata":{},"sourceType":"module"}