{"ast":null,"code":"var _jsxFileName = \"/home/rami/401/lab31/todo/todo/src/components/todo/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios';\nimport useAjax from '../hooks/useAjax';\nimport './todo.scss';\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\nexport default function ToDo() {\n  const [request, response] = useAjax();\n  const [list, setList] = useState([]); // useEffect(() => {\n  //   request({ todoAPI });\n  // }, [request]);\n\n  useEffect(() => {\n    document.title = `To Do List: (${list.filter(item => !item.complete).length})`;\n  }, [list]);\n  useEffect(() => {\n    console.lo;\n    setList(response);\n  }, [response]);\n\n  const getItems = async () => {\n    let request = await axios({\n      method: 'get',\n      mode: 'cors',\n      url: todoAPI\n    });\n    let data = request.data.results;\n    setList(data);\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const postItems = async input => {\n    let request = await axios({\n      method: 'post',\n      url: todoAPI,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: input\n    });\n    getItems();\n    return request;\n  };\n\n  const putItems = async id => {\n    let itemToPut = list.filter(i => i._id === id)[0];\n\n    if (itemToPut._id) {\n      let request = await axios({\n        method: 'put',\n        url: `${todoAPI}/${id}`,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          complete: !itemToPut.complete\n        }\n      });\n      getItems();\n      return request;\n    }\n  };\n\n  const deleteItems = async id => {\n    let request = await axios({\n      method: 'delete',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      url: `${todoAPI}/${id}`\n    });\n    getItems();\n    return request;\n  };\n\n  useEffect(() => {\n    getItems();\n  }, [deleteItems]); // useEffect(() => {\n  //   let list = [\n  //         { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //         { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //         { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //         { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //         { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //       ];\n  //       setList(list);\n  // }, [])\n  // render() {\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    addItem: postItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: putItems,\n    handleDelete: deleteItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }))));\n} // export default ToDo;","map":{"version":3,"sources":["/home/rami/401/lab31/todo/todo/src/components/todo/todo.js"],"names":["React","useState","useEffect","TodoForm","TodoList","axios","useAjax","todoAPI","ToDo","request","response","list","setList","document","title","filter","item","complete","length","console","lo","getItems","method","mode","url","data","results","postItems","input","headers","putItems","id","itemToPut","i","_id","deleteItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios'\nimport useAjax from '../hooks/useAjax'\nimport './todo.scss';\n\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\nexport default function ToDo (){\n\n\n  const [request, response] = useAjax();\n  const [list, setList] = useState([])\n\n  // useEffect(() => {\n  //   request({ todoAPI });\n  // }, [request]);\n\n  useEffect(() => {\n    document.title = `To Do List: (${list.filter(item => !item.complete).length})`;\n  }, [list]);\n\n  \n  useEffect(() => {\n    console.lo\n  setList(response);\n  }, [response]);\n\n\n  const getItems = async () => {\n    \n      let request = await axios({\n        method: 'get',\n        mode: 'cors',\n        url: todoAPI\n      })\n\n      let data = request.data.results;\n      setList(data);\n   \n  }\n\n  useEffect(() =>{\n    getItems()\n  }, []);\n\n  const postItems = async (input) => {\n    let request = await axios({\n      method: 'post',\n      url: todoAPI,\n      headers: { 'Content-Type': 'application/json' },\n      data: input\n    })\n    getItems();\n    return request;\n  };\n\n  const putItems = async (id) => {\n\n    let itemToPut = list.filter(i => i._id === id)[0];\n    \n    if (itemToPut._id) {\n      let request = await axios({\n        method: 'put',\n        url: `${todoAPI}/${id}`,\n        headers: { 'Content-Type': 'application/json' },\n        data: {complete: !itemToPut.complete},\n      })\n      getItems();\n      return request;\n    }\n  }\n\n  const deleteItems = async (id) => {\n\n    let request = await axios({\n      method: 'delete',\n      mode: 'cors',\n      headers: { 'Content-Type': 'application/json' },\n      url: `${todoAPI}/${id}`,\n    })\n    getItems();\n    return request;\n  }\n\n\n  useEffect(() =>{\n    getItems()\n  }, [deleteItems, ]);\n  \n\n\n  // useEffect(() => {\n  //   let list = [\n  //         { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //         { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //         { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //         { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //         { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //       ];\n    \n  //       setList(list);\n  // }, [])\n  \n  // render() {\n    \n  return (\n      <>\n        <header>\n          <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n          </h2>\n        </header>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm addItem={postItems} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={putItems}\n              handleDelete={deleteItems}\n            />\n          </div>\n        </section>\n      </>\n    );\n  }\n\n\n// export default ToDo;\n"]},"metadata":{},"sourceType":"module"}