{"ast":null,"code":"var _jsxFileName = \"/home/rami/401/lab31/todo/todo/src/components/todo/todo-connected.js\";\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport './todo.scss';\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\nconst Todo = () => {\n  const [list, setList] = useState([]);\n\n  const _addItem = item => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).then(savedItem => {\n      setList([...list, savedItem]);\n    }).catch(console.error);\n  };\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      }).then(response => response.json()).then(savedItem => {\n        setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n      }).catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get',\n      mode: 'cors'\n    }).then(data => data.json()).then(data => setList(data.results)).catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: _addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: _toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/home/rami/401/lab31/todo/todo/src/components/todo/todo-connected.js"],"names":["React","useEffect","useState","TodoForm","TodoList","todoAPI","Todo","list","setList","_addItem","item","due","Date","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","savedItem","catch","console","error","_toggleComplete","id","filter","i","_id","complete","url","map","listItem","_getTodoItems","data","results","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport './todo.scss';\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n\nconst Todo = () => {\n\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item)\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        setList([...list, savedItem])\n      })\n      .catch(console.error);\n  };\n\n  const _toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}/${id}`;\n\n      fetch(url, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(item)\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get',\n      mode: 'cors',\n    })\n      .then(data => data.json())\n      .then(data => setList(data.results))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n\n  return (\n    <>\n      <header>\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}