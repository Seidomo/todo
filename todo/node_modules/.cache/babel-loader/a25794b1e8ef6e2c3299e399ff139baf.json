{"ast":null,"code":"var _jsxFileName = \"/home/rami/401/lab31/todo/todo/src/components/todo/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios';\nimport useAjax from '../hooks/useAjax';\nimport './todo.scss';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\nexport default function ToDo() {\n  const [request, response] = useAjax([]);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    request({\n      url: todoAPI\n    });\n  }, [request]);\n  useEffect(() => {\n    console.log(response); //     if(!response){\n    // setList();\n    //     }else{\n    //       setList(response);\n    //     }\n    //  setList(response);\n  }, [response]);\n\n  const getItems = async () => {\n    let request = await axios({\n      method: 'get',\n      mode: 'cors',\n      url: todoAPI\n    });\n    let data = request.data.results;\n    setList(data);\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const postItems = async input => {\n    let request = await axios({\n      method: 'post',\n      url: todoAPI,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: input\n    });\n    getItems();\n    return request;\n  };\n\n  const putItems = async id => {\n    let itemToPut = list.filter(i => i._id === id)[0];\n\n    if (itemToPut._id) {\n      let request = await axios({\n        method: 'put',\n        url: `${todoAPI}/${id}`,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          complete: !itemToPut.complete\n        }\n      });\n      getItems();\n      return request;\n    }\n  };\n\n  const deleteItems = async id => {\n    let request = await axios({\n      method: 'delete',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      url: `${todoAPI}/${id}`\n    });\n    getItems();\n    return request;\n  };\n\n  useEffect(() => {\n    getItems();\n  }, [deleteItems]); // useEffect(() => {\n  //   let list = [\n  //         { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //         { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //         { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //         { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //         { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //       ];\n  //       setList(list);\n  // }, [])\n  // render() {\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NavBar, {\n    bg: \"primary\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Home\"))), /*#__PURE__*/React.createElement(NavBar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    className: \"nav-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"To Do List Manager (\", list.filter(item => !item.complete).length, \") Items To  Be Completed\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    addItem: postItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: putItems,\n    handleDelete: deleteItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }))));\n} // export default ToDo;","map":{"version":3,"sources":["/home/rami/401/lab31/todo/todo/src/components/todo/todo.js"],"names":["React","useState","useEffect","TodoForm","TodoList","axios","useAjax","NavBar","Nav","todoAPI","ToDo","request","response","list","setList","url","console","log","getItems","method","mode","data","results","postItems","input","headers","putItems","id","itemToPut","filter","i","_id","complete","deleteItems","item","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAGA,MAAMC,OAAO,GAAG,6CAAhB;AACA,eAAe,SAASC,IAAT,GAAgB;AAG7B,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBN,OAAO,CAAC,EAAD,CAAnC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAAC;AAAEI,MAAAA,GAAG,EAAEN;AAAP,KAAD,CAAP;AACD,GAFQ,EAEN,CAACE,OAAD,CAFM,CAAT;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EADc,CAElB;AACA;AACA;AACA;AACA;AACA;AACG,GARQ,EAQN,CAACA,QAAD,CARM,CAAT;;AAWA,QAAMM,QAAQ,GAAG,YAAY;AAEzB,QAAIP,OAAO,GAAG,MAAMN,KAAK,CAAC;AACxBc,MAAAA,MAAM,EAAE,KADgB;AAExBC,MAAAA,IAAI,EAAE,MAFkB;AAGxBL,MAAAA,GAAG,EAAEN;AAHmB,KAAD,CAAzB;AAMA,QAAIY,IAAI,GAAGV,OAAO,CAACU,IAAR,CAAaC,OAAxB;AACAR,IAAAA,OAAO,CAACO,IAAD,CAAP;AAEH,GAXD;;AAaAnB,EAAAA,SAAS,CAAC,MAAK;AACbgB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,SAAS,GAAG,MAAOC,KAAP,IAAiB;AACjC,QAAIb,OAAO,GAAG,MAAMN,KAAK,CAAC;AACxBc,MAAAA,MAAM,EAAE,MADgB;AAExBJ,MAAAA,GAAG,EAAEN,OAFmB;AAGxBgB,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHe;AAIxBJ,MAAAA,IAAI,EAAEG;AAJkB,KAAD,CAAzB;AAMAN,IAAAA,QAAQ;AACR,WAAOP,OAAP;AACD,GATD;;AAWA,QAAMe,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAE7B,QAAIC,SAAS,GAAGf,IAAI,CAACgB,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUJ,EAA3B,EAA+B,CAA/B,CAAhB;;AAEA,QAAIC,SAAS,CAACG,GAAd,EAAmB;AACjB,UAAIpB,OAAO,GAAG,MAAMN,KAAK,CAAC;AACxBc,QAAAA,MAAM,EAAE,KADgB;AAExBJ,QAAAA,GAAG,EAAG,GAAEN,OAAQ,IAAGkB,EAAG,EAFE;AAGxBF,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAHe;AAIxBJ,QAAAA,IAAI,EAAE;AAACW,UAAAA,QAAQ,EAAE,CAACJ,SAAS,CAACI;AAAtB;AAJkB,OAAD,CAAzB;AAMAd,MAAAA,QAAQ;AACR,aAAOP,OAAP;AACD;AACF,GAdD;;AAgBA,QAAMsB,WAAW,GAAG,MAAON,EAAP,IAAc;AAEhC,QAAIhB,OAAO,GAAG,MAAMN,KAAK,CAAC;AACxBc,MAAAA,MAAM,EAAE,QADgB;AAExBC,MAAAA,IAAI,EAAE,MAFkB;AAGxBK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHe;AAIxBV,MAAAA,GAAG,EAAG,GAAEN,OAAQ,IAAGkB,EAAG;AAJE,KAAD,CAAzB;AAMAT,IAAAA,QAAQ;AACR,WAAOP,OAAP;AACD,GAVD;;AAaAT,EAAAA,SAAS,CAAC,MAAK;AACbgB,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACe,WAAD,CAFM,CAAT,CAhF6B,CAsF7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,sBACI,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAMG,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADD,CANH,eAWE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAiC,IAAA,SAAS,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBpB,IAAI,CAACgB,MAAL,CAAYK,IAAI,IAAI,CAACA,IAAI,CAACF,QAA1B,EAAoCG,MAD3D,6BADF,CADF,CAXF,eAkBE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEZ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEV,IADR;AAEE,IAAA,cAAc,EAAEa,QAFlB;AAGE,IAAA,YAAY,EAAEO,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CAlBF,CADJ;AAmCC,C,CAGH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios'\nimport useAjax from '../hooks/useAjax'\nimport './todo.scss';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\nexport default function ToDo (){\n\n\n  const [request, response] = useAjax([]);\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    request({ url: todoAPI });\n  }, [request]);\n\n \n  \n  useEffect(() => {\n    console.log(response);\n//     if(!response){\n// setList();\n//     }else{\n//       setList(response);\n//     }\n//  setList(response);\n  }, [response]);\n\n\n  const getItems = async () => {\n    \n      let request = await axios({\n        method: 'get',\n        mode: 'cors',\n        url: todoAPI\n      })\n\n      let data = request.data.results;\n      setList(data);\n   \n  }\n\n  useEffect(() =>{\n    getItems()\n  }, []);\n\n  const postItems = async (input) => {\n    let request = await axios({\n      method: 'post',\n      url: todoAPI,\n      headers: { 'Content-Type': 'application/json' },\n      data: input\n    })\n    getItems();\n    return request;\n  };\n\n  const putItems = async (id) => {\n\n    let itemToPut = list.filter(i => i._id === id)[0];\n    \n    if (itemToPut._id) {\n      let request = await axios({\n        method: 'put',\n        url: `${todoAPI}/${id}`,\n        headers: { 'Content-Type': 'application/json' },\n        data: {complete: !itemToPut.complete},\n      })\n      getItems();\n      return request;\n    }\n  }\n\n  const deleteItems = async (id) => {\n\n    let request = await axios({\n      method: 'delete',\n      mode: 'cors',\n      headers: { 'Content-Type': 'application/json' },\n      url: `${todoAPI}/${id}`,\n    })\n    getItems();\n    return request;\n  }\n\n\n  useEffect(() =>{\n    getItems()\n  }, [deleteItems, ]);\n  \n\n\n  // useEffect(() => {\n  //   let list = [\n  //         { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //         { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //         { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //         { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //         { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //       ];\n    \n  //       setList(list);\n  // }, [])\n  \n  // render() {\n    \n  return (\n      <>\n        <header>\n          {/* <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n          </h2> */}\n        </header>\n         <NavBar bg=\"primary\" variant=\"dark\">\n          <Nav>\n            <Nav.Link href=\"\">Home</Nav.Link>\n          </Nav>\n        </NavBar>\n        <NavBar bg=\"dark\" variant=\"dark\" className=\"nav-two\">\n          <Nav>\n            <h2>\n              To Do List Manager ({list.filter(item => !item.complete).length}) Items To  Be Completed\n            </h2>\n          </Nav>\n        </NavBar>\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm addItem={postItems} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={putItems}\n              handleDelete={deleteItems}\n            />\n          </div>\n        </section>\n      </>\n    );\n  }\n\n\n// export default ToDo;\n"]},"metadata":{},"sourceType":"module"}