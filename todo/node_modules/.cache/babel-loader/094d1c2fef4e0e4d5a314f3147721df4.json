{"ast":null,"code":"var _jsxFileName = \"/home/rami/401/lab31/todo/todo/src/components/todo/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios';\nimpo;\nimport './todo.scss';\nexport default function ToDo() {\n  // class ToDo extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     list: [],\n  //   };\n  // }\n  const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n  const [list, setList] = useState([]);\n\n  const getItem = async () => {\n    try {\n      let request = await axios({\n        method: 'get',\n        url: todoAPI\n      });\n      let data = request.data.rseults;\n      setList(data);\n    } catch (e) {\n      console.warn(e.message);\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    getItem();\n  }, []); // const postItem = async (input) =>{\n  //   try{\n  //   }\n  // }\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let lists = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList({\n        lists\n      });\n    }\n  }; // function componentDidMount (){\n  //   let list = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //   ];\n  //   setLists({list});\n  // }\n\n\n  useEffect(() => {\n    let list = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(list);\n  }, []); // render() {\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleInSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }))));\n} // export default ToDo;","map":{"version":3,"sources":["/home/rami/401/lab31/todo/todo/src/components/todo/todo.js"],"names":["React","useState","useEffect","TodoForm","TodoList","axios","impo","ToDo","todoAPI","list","setList","getItem","request","method","url","data","rseults","e","console","warn","message","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","i","lists","map","listItem","text","difficulty","assignee","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios'\nimpo\n\nimport './todo.scss';\n\nexport default function ToDo (){\n\n// class ToDo extends React.Component {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     list: [],\n  //   };\n  // }\n   const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n  const [list, setList] = useState([])\n\n\n  const getItem = async () => {\n    try{\n      let request = await axios({\n        method: 'get',\n        url: todoAPI\n      })\n\n      let data = request.data.rseults;\n      setList(data);\n    }catch(e){console.warn(e.message)};\n  }\n\n  useEffect(() =>{\n    getItem()\n  }, []);\n\n\n  // const postItem = async (input) =>{\n  //   try{\n\n  //   }\n  // }\n\n const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id =>{\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let lists = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList({lists});\n    }\n\n  };\n\n  // function componentDidMount (){\n  //   let list = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //   ];\n\n  //   setLists({list});\n  \n  // }\n\n  useEffect(() => {\n    let list = [\n          { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n          { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n          { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n          { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n          { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n        ];\n    \n        setList(list);\n  }, [])\n  // render() {\n    return (\n      <>\n        <header>\n          <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n          </h2>\n        </header>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm handleInSubmit={addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              list={list}\n              handleComplete={toggleComplete}\n            />\n          </div>\n        </section>\n      </>\n    );\n  }\n\n\n// export default ToDo;\n"]},"metadata":{},"sourceType":"module"}